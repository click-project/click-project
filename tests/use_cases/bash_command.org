:PROPERTIES:
:ID:       85c8e385-7f24-48ac-9a85-30cfc354aebf
:END:
#+TITLE: Showing how to create a bash command
#+LANGUAGE: en
#+EXPORT_FILE_NAME: ../../doc/use_cases/bash_command.md

#+CALL: ../../lp.org:check-result()

#+name: init
#+BEGIN_SRC bash :results none :exports none :session 85c8e385-7f24-48ac-9a85-30cfc354aebf
. ./sandboxing.sh
#+END_SRC

To create a bash command, you can simply call the following command.

#+name: create
#+BEGIN_SRC bash :results none :session 85c8e385-7f24-48ac-9a85-30cfc354aebf
clk command create bash mycommand
#+END_SRC

Note that if you omit the no open, your editor will be used to first edit the
command.

#+BEGIN_SRC bash :results verbatim  :session 85c8e385-7f24-48ac-9a85-30cfc354aebf
clk command which mycommand
#+END_SRC

#+RESULTS:
: /home/sam/tmp/tmp.HkSraoDtb4/clk-root/bin/mycommand

#+name: try
#+BEGIN_SRC bash   :session 85c8e385-7f24-48ac-9a85-30cfc354aebf :cache yes
clk mycommand
#+END_SRC

#+RESULTS[97f6a9c28340c97de929400f49e80c55c4004428]: try
: warning: The command 'mycommand' has no documentation

It does not do much, but it is now part of your tools

#+name: see
#+BEGIN_SRC bash :results verbatim :exports both :session 85c8e385-7f24-48ac-9a85-30cfc354aebf :cache yes
clk | grep mycommand
#+END_SRC

#+RESULTS[063678aa50852466b5fe9080008a1abeda057f56]: see
: mycommand   Description

Now, let's put something into this command

#+name: fill
#+BEGIN_SRC bash :results none :exports both :session 85c8e385-7f24-48ac-9a85-30cfc354aebf
cat <<"EOH" > "$(clk command which mycommand)"
#!/bin/bash -eu

source "_clk.sh"

clk_usage () {
    cat<<EOF
$0

This command shows something
--

EOF
}

clk_help_handler "$@"

echo something

EOH
#+END_SRC

#+NAME: help
#+BEGIN_SRC bash :results verbatim :exports both :session 85c8e385-7f24-48ac-9a85-30cfc354aebf :cache yes
clk mycommand --help
#+END_SRC

#+RESULTS[f8828cd48f152b2e7faa15ce1b0657999edfa6b3]: help
: Usage: clk mycommand [OPTIONS]
:
:   This command shows something
:
: Options:
:   --help-all  Show the full help message, automatic options included.
:   --help      Show this message and exit.

#+name: check
#+BEGIN_SRC bash :results verbatim :exports both :session 85c8e385-7f24-48ac-9a85-30cfc354aebf
test "$(clk mycommand)" = "something"
#+END_SRC

#+RESULTS: check

#+BEGIN_SRC bash :exports none :tangle bash_command.sh :noweb yes
#!/bin/bash -eu

<<init>>

<<create>>

check-result(try)

check-result(see)

<<fill>>

check-result(help)

<<check>>
#+END_SRC

#+BEGIN_SRC bash :results none :exports none
chmod +x bash_command.sh
#+END_SRC
