version: 2.1

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/python
  python: circleci/python@1.2
  sonarcloud: sonarsource/sonarcloud@1.0.2

workflows:
  test:  # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    # For more details on extending your workflow, see the configuration docs: https://circleci.com/docs/2.0/configuration-reference/#workflows
    jobs:
      - test:
          context: SonarCloud
          filters:
            tags:
              # see https://circleci.com/docs/2.0/configuration-reference/#tags
              only: /v.*/
      - deploy:
          requires:
            - test
          filters:
            # only run for the official tags
            tags:
              only: /v.*/
            # deploy only tags, not branches
            branches:
              ignore: /.*/

notify:
  webhooks:
    # gitter notifications
    - url: https://webhooks.gitter.im/e/16634961392360db480a

jobs:
  test:
    docker:
      - image: alpine
    steps:
        - checkout
        - run: wget https://github.com/earthly/earthly/releases/download/v0.6.12/earthly-linux-amd64 -O /usr/local/bin/earthly && chmod +x /usr/local/bin/earthly
        - run: apk add --update docker
        - run: earthly --secret SONAR_TOKEN="${SONAR_TOKEN}" --ci +sanity-check

  deploy:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: Build wheel
          command: |
            python3 -m pip wheel .
            mkdir -p /tmp/wheel
            mv clk-*whl /tmp/wheel/
      - run:
          name: Init pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = clk_uploader" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: "Deploy it"
          command: |
            python3 -m venv /tmp/venv
            . /tmp/venv/bin/activate
            python3 -m pip install twine
            twine upload /tmp/wheel/*
      - store_artifacts:
          path: /tmp/artifacts/
